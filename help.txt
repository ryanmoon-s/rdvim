==== DIFF ================
对比两个文件的差异 删除 增加 修改 三种颜色不同，删除有--- 修改部分高亮
外部打开 vimdiff a.txt b.txt
内部打开 vi a.txt   :vertical diffsplit b.txt

跳转
[c 跳到上一个差异处
]c 跳到下一个差异处

差异替换
dp (diff put)    以当前文件为准 put   过去
do (diff obtain) 以对面文件为准 obtain过来

替换反悔
,u 要先跳到对方文件中

手动更新状态 (有时候自动更新失败)
:diffupdate  

同时操作两个文件
:qa  (quit all)
:wa
:wqa

缺省相同行数
相同的上下文 默认只展示6行 可以改变其行数
set diffopt=context:6

==== MARK ================
书签不会因退出vim而删除 
' 跳到书签行首 ` 跳到书签标记的光标位置
0-9 A-Z 全局 跨文件
a-z     本地 当前文件使用

ma                设置标签a
`a                跳转到标签a
:marks            查看所有标签
``                回到跳转前的位置
delmarks a        删除标签a
delmarks!         删除所有标签 不包含 [A-Z] [0-9]
delmarks A-Z0-9   删除标签 [A-Z] [0-9]

自动载入书签
"                 上次离开buf时光标的位置
<                 上次可视选择的 第一行
>                 上次可视选择的 最后一行
^                 上次离开Insert模式时光标的位置
.                 上次改变 文本内容 的位置
' `               跳转前的位置

==== MAP ================
n/i/v   nore    map    <silent>        src-cmd    dst-cmd
mode    非递归  映射   不显示提示信息
可无    可无

<CR>      carriage-return 回车
<ESC>     esc
<C-w>     Ctrl + w 可跟大写
<Space>   space
<Leader>  mapleader
<silent>  静默 状态行不echo文字 
<space>   空格

不能加 nore :
1. 需要跳到其它插件执行的
2. 数字相关的 - 会导致数字不起作用
必须加 nore :
1. 已有的按键 o d 等 - 不然会触发原有按键

绑定fx，就不要绑定f了，想要f出效果，会等待一段时间 以确认用户不输入第二个字母

dst-cmd中的空格是生效的 <Space> 只是让人看得出这是有空格的

==== NORMAL ================

1. 施放后还在NORMAL模式

U 将当前行恢复至开始编辑前的样子 只缓存当前行 u撤销是上次操作可无限u
V 行 可视模式
D 删除至行尾 dd 删除当前行
x 删除光标上的符号 X 删除光标左边的符号

w 跳到下个词首 dw 删除到下下词首前
e 跳到下个单尾
b 跳到上个词首
f + x 行内查找字符x 直接跳转 只能找到光标后面的字符
K 跳到 当前位置的单词 的help
{ 跳到上一段 一般以空行为单位
} 跳到下一段

M 光标跳到当前屏幕中间行
H 光标跳到当前屏幕顶部行
L 光标跳到当前屏幕底部行
zz 光标行作为屏幕中间行
zt 当前行作为屏幕顶行
zb 当前行作为屏幕底行

backspace 左移光标 会跨行
space     右移光标 会跨行

<C-e> 向上滚屏
<C-y> 向下滚屏

2. 施放后进入INSERT模式

i 插入 a 光标后移插入
s 删除并插入
I 行首插入 = 0i
A 行尾插入 = $a
c cc和dd类似 但不会将光标移到下一行 而是在当前行合适的缩进位置 进入插入模式
C 和D类似 但删除后 会进入插入模式

==== INSERT ================

<C-w> 向前删单词
<C-[> 同ESC

==== COMMAND ================

:tabe file    在另一个buffer打开文件
:vs file      垂直分屏打开
:sp file      水平分屏打开

== 替换

:s/aa/bb 					单行   第一个
:2,5s/aa/bb					2-5行  第一个
:%s/aa/bb					所有行 第一个
:%s/aa/bb/g					所有行 一行的所有

%s 所有行 			|  sed 是不选中行，就默认所有行
/g 一行的所有 		|  与sed一样

==== VISUAL ================

o     反向到最顶 再选择

==== SKILLS ================

1. 复合操作
y: yy 、nyy 、 ygg yG yw y0 y$
很多按键 [可以] -->  左接数字 || 右接跳转 || 可视选择
只能左接数字 s x w b << >>       //它们是单按键 按下立即产生效果
左数字右跳转 y d c = v V         //哪yy y到哪
可视+按键    以上都可以
组合使用: y2w d2w

跳转: 0 $ gg G w e b
特殊 w不包含光标字母 e包含光标字母
dw:  {$h}ello world  ->  {$}world    不包括w
de:  {$h}ello world  ->  {$} world     包括o

2. surround 内容操作
yi(  解释:y inner  作用: [复制] 光标所在的 括号 内的所有内容
扩展: y d c  +  i  +  ( [ {

